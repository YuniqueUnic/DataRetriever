<Window x:Class="VSTSDataProvider.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:VSTSDataProvider"
        xmlns:msflib="clr-namespace:System;assembly=mscorlib"
        xmlns:prop="clr-namespace:VSTSDataProvider.Properties.Language"
        xmlns:vm="clr-namespace:VSTSDataProvider.ViewModels"
        x:Name="MainWindowCurrentInstance"
        Title="{Binding WindowTitle}"
        Width="800"
        Height="450"
        d:DataContext="{d:DesignInstance {x:Type vm:MainWindowViewModel}}"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <!--  带参数的 DataContent 设置方式  -->
            <!--<ObjectDataProvider x:Key="vmProvider" ObjectType="{x:Type vm:MainWindowViewModel}">
                <ObjectDataProvider.ConstructorParameters>
                    <msflib:Boolean>True</msflib:Boolean>
                </ObjectDataProvider.ConstructorParameters>
            </ObjectDataProvider>-->

            <ControlTemplate x:Key="TestCaseGridTemplateObsolete" TargetType="{x:Type DataGrid}">
                <DataGrid AutoGenerateColumns="False"
                          CanUserReorderColumns="True"
                          CanUserResizeColumns="True"
                          CanUserResizeRows="True"
                          CanUserSortColumns="True"
                          FontSize="13"
                          ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Outcome}" Value="Passed">
                                    <Setter Property="Background" Value="#C8E6C9" />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Outcome}" Value="Active">
                                    <Setter Property="Background" Value="#B3E5FC" />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Outcome}" Value="Failed">
                                    <Setter Property="Background" Value="#FFCDD2" />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Padding" Value="4,4" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="FontSize" Value="14" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Padding" Value="4,2" />
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <!-- <DataGridTextColumn Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType=DataGridRow}}" Header="No." /> -->
                        <DataGridTextColumn Binding="{Binding ID}" Header="TestCaseId" />
                        <DataGridTextColumn Binding="{Binding Name}" Header="Title" />
                        <DataGridTextColumn Binding="{Binding CQID}" Header="CQID" />
                        <DataGridTextColumn Binding="{Binding ProductArea}" Header="ProductArea" />
                        <DataGridTextColumn Binding="{Binding ScriptName}" Header="ScriptName" />
                        <DataGridTextColumn Binding="{Binding TestTool}" Header="TestTool" />
                        <DataGridTextColumn Binding="{Binding Outcome}" Header="Outcome" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.ID}" Header="TestPointId" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.Name}" Header="Configuration" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.lastUpdatedDate}" Header="LastUpdatedDate" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.uniqueName}" Header="RunBy" />
                    </DataGrid.Columns>
                </DataGrid>
            </ControlTemplate>

            <!--  Move BaseDataGridStyle/DetailModelsGridTemplate/OTE_OfflineModelsGridTemplate to App.xaml  -->

            <!--  Try to use DataGridTemplateSelector to Switch different DataType  -->
            <!--  [Obsolete("Recommend using DetailModel.")]  -->
            <DataTemplate x:Key="TestCaseGridDataTemplate">
                <DataGrid Style="{StaticResource BaseDataGridStyle}" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}">
                    <DataGrid.Columns>
                        <!-- <DataGridTextColumn Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType=DataGridRow}}" Header="No." /> -->
                        <DataGridTextColumn Binding="{Binding ID}" Header="TestCaseId" />
                        <DataGridTextColumn Binding="{Binding Name}" Header="Title" />
                        <DataGridTextColumn Binding="{Binding CQID}" Header="CQID" />
                        <DataGridTextColumn Binding="{Binding ProductArea}" Header="ProductArea" />
                        <DataGridTextColumn Binding="{Binding ScriptName}" Header="ScriptName" />
                        <DataGridTextColumn Binding="{Binding TestTool}" Header="TestTool" />
                        <DataGridTextColumn Binding="{Binding Outcome}" Header="Outcome" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.ID}" Header="TestPointId" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.Name}" Header="Configuration" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.lastUpdatedDate}" Header="LastUpdatedDate" />
                        <DataGridTextColumn Binding="{Binding SelfTestPoint.uniqueName}" Header="RunBy" />
                    </DataGrid.Columns>
                </DataGrid>
            </DataTemplate>

            <DataTemplate x:Key="DetailsGridDataTemplate">
                <DataGrid Style="{StaticResource BaseDataGridStyle}" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}">
                    <DataGrid.Columns>
                        <!-- <DataGridTextColumn Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType=DataGridRow}}" Header="No." /> -->
                        <DataGridTextColumn Binding="{Binding TestPlanId}" Header="TestPlanId" />
                        <DataGridTextColumn Binding="{Binding TestSuiteId}" Header="TestSuiteId" />
                        <DataGridTextColumn Binding="{Binding ID}" Header="TestCaseId" />
                        <DataGridTextColumn Binding="{Binding Name}" Header="Title" />
                        <DataGridTextColumn Binding="{Binding CQID}" Header="CQID" />
                        <DataGridTextColumn Binding="{Binding ProductArea}" Header="ProductArea" />
                        <DataGridTextColumn Binding="{Binding ScriptName}" Header="ScriptName" />
                        <DataGridTextColumn Binding="{Binding TestTool}" Header="TestTool" />
                        <DataGridTextColumn Binding="{Binding Outcome}" Header="Outcome" />
                        <DataGridTextColumn Binding="{Binding TestPointId}" Header="TestPointId" />
                        <DataGridTextColumn Binding="{Binding Configuration}" Header="Configuration" />
                        <DataGridTextColumn Binding="{Binding LastUpdatedDate}" Header="LastUpdatedDate" />
                        <DataGridTextColumn Binding="{Binding RunBy}" Header="RunBy" />
                        <DataGridTextColumn Binding="{Binding IsAutomated}" Header="IsAutomated" />
                    </DataGrid.Columns>
                </DataGrid>
            </DataTemplate>

            <DataTemplate x:Key="OTE_OfflineModelsGridDataTemplate">
                <DataGrid Style="{StaticResource BaseDataGridStyle}" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding TestCaseId}" Header="TestCaseId" />
                        <DataGridTextColumn Binding="{Binding Title}" Header="Title" />
                        <DataGridTextColumn Binding="{Binding TestStep}" Header="TestStep" />
                        <DataGridTextColumn Binding="{Binding StepAction}" Header="StepAction" />
                        <DataGridTextColumn Binding="{Binding StepExpected}" Header="StepExpected" />
                        <DataGridTextColumn Binding="{Binding TestPointId}" Header="TestPointId" />
                        <DataGridTextColumn Binding="{Binding Configuration}" Header="Configuration" />
                        <DataGridTextColumn Binding="{Binding AssignedTo}" Header="AssignedTo" />
                        <DataGridTextColumn Binding="{Binding Outcome}" Header="Outcome" />
                        <DataGridTextColumn Binding="{Binding Comment}" Header="Comment" />
                        <DataGridTextColumn Binding="{Binding Defects}" Header="Defects" />
                        <DataGridTextColumn Binding="{Binding RunBy}" Header="RunBy" />
                    </DataGrid.Columns>
                </DataGrid>
            </DataTemplate>

            <!--<cvtr:DataGridTemplateSelector x:Key="DataGridTemplateSelector"
                                         OTEsModelTemplate="{StaticResource OTE_OfflineModelsGridDataTemplate}"
                                         TCseTemplate="{StaticResource TestCaseGridDataTemplate}" />-->
        </ResourceDictionary>
    </Window.Resources>

    <!--<d:Window.DataContext>
        <vm:MainWindowViewModel />
    </d:Window.DataContext>-->

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding MainWindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="164"
                                  MinWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DoubleValueScaleConverter}, ConverterParameter='0.01'}"
                                  MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DoubleValueScaleConverter}, ConverterParameter='0.5'}" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--  row = 0  -->
            <Grid Name="LeftInfoGrid"
                  Grid.Row="0"
                  Grid.Column="0"
                  Margin="4"
                  Background="#1000">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MaxHeight="100" />
                    <RowDefinition Height="Auto" MaxHeight="100" />
                    <RowDefinition Height="Auto" MaxHeight="100" />
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="3*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0"
                            Margin="0,4,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <RadioButton Name="TCsRadioButton"
                                 Grid.Row="0"
                                 Margin="4,0"
                                 GroupName="DataGridTypeRadioGroup"
                                 IsChecked="{Binding IsDetailsChecked}"
                                 Content="{x:Static prop:Resource.Detail}" />
                    <RadioButton Name="OTEsRadioButton"
                                 Grid.Row="0"
                                 Margin="4,0"
                                 GroupName="DataGridTypeRadioGroup"
                                 Content="{x:Static prop:Resource.OTE}" />
                </StackPanel>
                <TextBox Name="TestPlanTextBox"
                         Style="{StaticResource TextBoxShortWithLabel}"
                         Grid.Row="1"
                         Margin="0,4"
                         d:Text="Test Plan"
                         Tag="{x:Static prop:Resource.TestPlan}"
                         Text="{Binding TestPlanID, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Name="TestSuiteTextBox"
                         Style="{StaticResource TextBoxShortWithLabel}"
                         Grid.Row="2"
                         Margin="0,4"
                         d:Text="Test Suite"
                         Tag="{x:Static prop:Resource.TestSuite}"
                         Text="{Binding TestSuiteID, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Name="CompleteURLTextBox"
                         Style="{StaticResource TextBoxLongWithLabel}"
                         Grid.Row="3"
                         Margin="0,4"
                         Tag="{x:Static prop:Resource.CompleteUrl}"
                         TextWrapping="Wrap"
                         Text="{Binding CompleteUrl, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Name="CookieTextBox"
                         Style="{StaticResource TextBoxLongWithLabel}"
                         Grid.Row="4"
                         Margin="0,4"
                         d:Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod lacus quis semper consequat. Donec commodo, erat eu aliquam ornare, ipsum nisl euismod est, at lacinia nunc felis a nisi. Nulla facilisi. Nunc vel lorem id sapien tristique iaculis. Aenean molestie, tellus in suscipit commodo, libero mauris efficitur nibh, a euismod mauris eros nec diam. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec venenatis, ex vel cursus interdum, ipsum lacus sollicitudin sapien, vel rutrum velit velit sit amet lectus. Nam condimentum nisl quis tellus feugiat, vel eleifend erat accumsan. Sed vel ultricies nunc. Duis eget lacinia sapien. Vivamus mollis leo nec tortor faucibus, a efficitur nibh molestie."
                         Tag="{x:Static prop:Resource.Cookie}"
                         TextWrapping="Wrap"
                         Text="{Binding Cookie, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            <GridSplitter Grid.Row="0"
                          Grid.Column="1"
                          Width="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch"
                          Background="#4000"
                          ResizeDirection="Columns"
                          ShowsPreview="True" />
            <Border Grid.Row="0"
                    Grid.Column="2"
                    Margin="4"
                    BorderBrush="Cyan"
                    BorderThickness="1">
                <Grid Name="TableGrid"
                      Grid.Row="0"
                      Grid.Column="2">
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static prop:Resource.Copy}" Command="ApplicationCommands.Copy" />
                            <MenuItem Header="{x:Static prop:Resource.Cut}" Command="ApplicationCommands.Cut" />
                            <MenuItem Header="{x:Static prop:Resource.Paste}" Command="ApplicationCommands.Paste" />
                        </ContextMenu>
                    </Grid.ContextMenu>
                    <DataGrid Name="OTEsDataGrid"
                              d:ItemsSource="{d:SampleData ItemCount=100}"
                              IsReadOnly="True"
                              SelectionUnit="Cell"
                              Template="{StaticResource OTE_OfflineModelsGridTemplate}"
                              Visibility="{Binding IsDetailsChecked, Converter={StaticResource BoolenNullableToVisibilityReverse}}"
                              ItemsSource="{Binding VstsDataCollectionViewOTEs}" />
                    <!--<DataGrid Name="TCsDataGrid"
                              d:ItemsSource="{d:SampleData ItemCount=100}"
                              Template="{StaticResource TestCaseGridTemplate}"
                              Visibility="{Binding IsDetailsChecked, Converter={StaticResource BoolenNullableToVisibility}}"
                              ItemsSource="{Binding VstsDataCollectionViewTCs}" />-->
                    <DataGrid Name="DetailsDataGrid"
                              d:ItemsSource="{d:SampleData ItemCount=100}"
                              IsReadOnly="True"
                              SelectionUnit="Cell"
                              Template="{StaticResource DetailModelsGridTemplate}"
                              Visibility="{Binding IsDetailsChecked, Converter={StaticResource BoolenNullableToVisibility}}"
                              ItemsSource="{Binding VstsDataCollectionViewDetails}" />
                </Grid>
            </Border>
        </Grid>
        <!--  row = 1  -->
        <Grid Name="BottomFunctionsGrid"
              Grid.Row="1"
              Grid.Column="0"
              Grid.ColumnSpan="3"
              Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button Name="GetDataButton"
                    Style="{StaticResource BaseButtonStyle}"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,0,4,0"
                    Command="{Binding GetDataButtonClickedCommand}"
                    Content="{x:Static prop:Resource.GetData}" />
            <ComboBox Name="OTEsFilterComboBox"
                      Grid.Row="0"
                      Grid.Column="1"
                      Height="{Binding ElementName=GetDataButton, Path=ActualHeight}"
                      Padding="4,0"
                      VerticalAlignment="Center"
                      VerticalContentAlignment="Center"
                      IsEditable="True"
                      IsTextSearchEnabled="True"
                      Visibility="{Binding IsDetailsChecked, Converter={StaticResource BoolenNullableToVisibilityReverse}}"
                      Text="{Binding OTEsFilterComboBoxText, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding OTEsFilterCollectionsComboBox}">
                <i:Interaction.Triggers>
                    <i:KeyTrigger Key="Return" ActiveOnFocus="True">
                        <i:InvokeCommandAction Command="{Binding RefreshButtonClickedCommand}" />
                    </i:KeyTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <!--<ComboBox Name="TCsFilterComboBox"
                      Grid.Row="0"
                      Grid.Column="1"
                      Height="{Binding ElementName=GetDataButton, Path=ActualHeight}"
                      Padding="4,0"
                      VerticalAlignment="Center"
                      VerticalContentAlignment="Center"
                      IsEditable="True"
                      IsTextSearchEnabled="True"
                      Visibility="{Binding IsDetailsChecked, Converter={StaticResource BoolenNullableToVisibility}}"
                      Text="{Binding TCsFilterComboBoxText, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding TCsFilterCollectionsComboBox}">
                <i:Interaction.Triggers>
                    <i:KeyTrigger Key="Return" ActiveOnFocus="True">
                        <i:InvokeCommandAction Command="{Binding RefreshButtonClickedCommand}" />
                    </i:KeyTrigger>
                </i:Interaction.Triggers>
            </ComboBox>-->
            <ComboBox Name="DetailsFilterComboBox"
                      Grid.Row="0"
                      Grid.Column="1"
                      Height="{Binding ElementName=GetDataButton, Path=ActualHeight}"
                      Padding="4,0"
                      VerticalAlignment="Center"
                      VerticalContentAlignment="Center"
                      IsEditable="True"
                      IsTextSearchEnabled="True"
                      Visibility="{Binding IsDetailsChecked, Converter={StaticResource BoolenNullableToVisibility}}"
                      Text="{Binding DetailsFilterComboBoxText, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding DetailsFilterCollectionsComboBox}">
                <i:Interaction.Triggers>
                    <i:KeyTrigger Key="Return" ActiveOnFocus="True">
                        <i:InvokeCommandAction Command="{Binding RefreshButtonClickedCommand}" />
                    </i:KeyTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <!--  Width="{Binding ElementName=TCsFilterComboBox, Path=ActualWidth}"  -->
            <ProgressBar Name="GetVSTSDataProgressBar"
                         Grid.Row="0"
                         Grid.Column="1"
                         Height="{Binding ElementName=DetailsFilterComboBox, Path=ActualHeight}"
                         VerticalAlignment="Center"
                         d:Visibility="Collapsed"
                         IsIndeterminate="True"
                         Visibility="{Binding GetDataButtonClickedCommand.IsExecuting, Converter={StaticResource BoolenNullableToVisibility}}" />
            <Button Name="RefreshButton"
                    Style="{StaticResource BaseButtonStyle}"
                    Grid.Row="0"
                    Grid.Column="2"
                    Margin="4,0,0,0"
                    ToolTip="Refresh the table."
                    Command="{Binding RefreshButtonClickedCommand}"
                    Content="{x:Static prop:Resource.Refresh}" />
            <Menu Grid.Row="0" Grid.Column="3">
                <MenuItem Padding="4"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          FontStyle="Oblique"
                          FontWeight="ExtraBold"
                          Header="...">
                    <MenuItem Header="{x:Static prop:Resource.Export}" Command="{Binding ExportCommand}" />
                    <MenuItem Header="{x:Static prop:Resource.Import}" Command="{Binding ImportCommand}" />
                    <MenuItem Header="{x:Static prop:Resource.Edit}" Command="{Binding ModeSwitchCommand}" />
                    <MenuItem Header="{x:Static prop:Resource.Language}"
                              Command="{Binding LanguageChangeCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource self}, Path=Header}" />
                    <MenuItem Header="{x:Static prop:Resource.About}"
                              Command="{Binding AboutCommand}"
                              CommandParameter="{Binding ElementName=MainWindowCurrentInstance}" />
                </MenuItem>
            </Menu>
        </Grid>
    </Grid>
</Window>
